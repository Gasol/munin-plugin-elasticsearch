#!/usr/bin/env perl

# Parameters supported:
#
# config
# autoconf
#
# Magic markers:
#%# family=auto
#%# capabilities=autoconf

use strict;
use warnings;
use LWP;
use JSON qw/decode_json/;
use Data::Dumper;

=head1 NAME

elasticsearch_thread_pool_rejected - A munin plugin that collects stats about the rejected count of thread pool

=head1 APPLICABLE SYSTEMS

Elasticsearch

=head1 CONFIGURATION

None

=head1 BUGS

None known so far. If you find any, let me know.

=head1 AUTHOR

Gasol Wu <gasol.wu@gmail.com>

=cut

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';
my $port = exists $ENV{'port'} ? $ENV{'port'} : 9200;

my $ua = LWP::UserAgent->new();
$ua->timeout(10);

sub get_json_from_url {
    my $uri = shift;
    my $res = $ua->get($uri, 'Content-Type' => 'application/json' );
    Carp::confess($res->code . " for " . $uri) unless $res->is_success;
    my $data = do { local $@; eval { decode_json($res->content) } };
    die("Could not decode JSON from: " . $res->content) unless $data;
    return $data;
}

my $data = get_json_from_url("http://$host:$port/_nodes/_local/stats/thread_pool");

my $node_name = (keys $data->{nodes})[0];
my $thread_pool = $data->{nodes}{$node_name}{thread_pool};
my @fields = sort keys $thread_pool;

if ($ARGV[0] and $ARGV[0] eq 'config') {
    print "graph_title Elasticsearch rejected thread\n";
    print "graph_category elasticsearch\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel Count\n";

    print "graph_order " . join(' ', @fields) . "\n";
    for my $field (@fields) {
        print "$field.label $field\n";
        print "$field.type DERIVE\n";
        print "$field.min 0\n";
        print "$field.draw LINE2\n";
    }
}
elsif (!$ARGV[0] || $ARGV[0] eq 'autoconf') {
    for my $field (@fields) {
        my $rejected = $thread_pool->{$field}{rejected};
        print "$field.value $rejected\n";
    }
}

exit(0);
